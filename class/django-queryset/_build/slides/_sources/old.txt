Map
----------------------------------------------------------------
.. py:function:: map(function, iterable, ...)

   Apply function to every item of iterable and return a **list** of the results. 

>>> map(None, (1,2))
[1, 2]

.. note:: If additional iterable arguments are passed, function must
   take that many arguments and is applied to the items from
   all iterables in parallel. If one iterable is shorter than
   another it is assumed to be extended with None items. If
   function is None, the identity function is assumed; if there
   are multiple arguments, map() returns a list consisting of
   tuples containing the corresponding items from all iterables
   (a kind of transpose operation). The iterable arguments may
   be a sequence or any iterable object; the result is always a
   list.

>>> map(None, 'ab', [1,2,3])
[('a', 1), ('b', 2), (None, 3)]

